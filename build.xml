<project name="MazeCraft" default="All">
    <property name="build.dir" location="target/classes" />
    <property name="buildBase.dir" location="target" />
    <property name="src.dir" location="src" />
    <property name="tests.dir" location="test" />
    <property name="testResults.dir" location="testresults" />
    <property name="artifacts.dir" location="artifacts" />
    <property name="artifactsLib.dir" location="artifacts/lib" />
    <property name="projectLib.dir" location="lib" />
    <property name="docs.dir" location="docs" />


        <path id="junit.class.path">
            <pathelement location="lib/apiguardian-api-1.1.2.jar"/>
            <pathelement location="lib/junit-jupiter-5.8.2.jar"/>
            <pathelement location="lib/junit-jupiter-api-5.8.2.jar"/>
            <pathelement location="lib/junit-jupiter-engine-5.8.2.jar"/>
            <pathelement location="lib/junit-jupiter-params-5.8.2.jar"/>
            <pathelement location="lib/junit-platform-commons-1.8.2.jar"/>
            <pathelement location="lib/junit-platform-engine-1.8.2.jar"/>
            <pathelement location="lib/junit-platform-launcher-1.8.2.jar"/>
            <pathelement location="lib/opentest4j-1.2.0.jar"/>
            <pathelement location="${build.dir}"/>
            <fileset dir="${projectLib.dir}" includes="**/*.jar" />
        </path>

    <target name="All" depends="Compile,Documentation,Build Jar"/>

    <target name="Compile">
        <mkdir dir = "${build.dir}" />
        <javac srcdir = "${src.dir}" destdir="${build.dir}" includeantruntime="false">
            <classpath refid="junit.class.path" />
        </javac>

    </target>

    <target name="Test" depends="Compile">
        <mkdir dir="${testResults.dir}"/>
        <javac srcdir="${tests.dir}" destdir="${build.dir}" includeantruntime="false">
            <classpath refid="junit.class.path" />
        </javac>
        <junitlauncher printsummary="true" failureproperty="junit.failure">
            <classpath refid="junit.class.path" />
            <testclasses outputdir="${testResults.dir}">
                <fileset dir="${build.dir}"  includes="**/*.class"/>
                <listener type="legacy-plain" />
            </testclasses>
        </junitlauncher>
        <fail if="junit.failure"/>
    </target>

    <target name="Build Jar" depends="Compile,Test">
        <delete dir="${artifacts.dir}"/>
        <mkdir dir="${artifacts.dir}" />
        <mkdir dir="${artifactsLib.dir}"/>
        <jar jarfile="artifacts/MazeCraft.jar" basedir="${build.dir}">
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>

                <attribute name="Implementation-Vendor" value="Group 127"/>
                <attribute name="Implementation-Title" value="MazeCraft"/>
                <attribute name="Implementation-Version" value="1.0.0"/>

                <attribute name="Class-Path" value="lib/sqlite-jdbc-3.30.1.jar"/>
                <attribute name="Main-Class" value="Main"/>
            </manifest>
        </jar>
        <copy todir="artifacts">
            <!--            <fileset dir="." includes="*.db"/>-->
            <fileset dir="." includes="img/**" />
        </copy>
        <copy todir="${artifactsLib.dir}">
            <fileset dir="${projectLib.dir}" includes="sqlite-jdbc-3.30.1.jar"/>
        </copy>
        <copy todir="${artifacts.dir}">
            <fileset dir="." includes="db.props"/>
        </copy>

    </target>

    <target name="Documentation">
        <mkdir dir="${docs.dir}" />
        <javadoc destdir="${docs.dir}">
            <fileset dir="." />
        </javadoc>
    </target>

    <target name="Clean Up">
        <delete dir="${build.dir}" quiet="true"/>
        <delete dir="target" quiet="true"/>
        <delete dir="${testResults.dir}" quiet="true"/>
        <delete dir="${artifacts.dir}" quiet="true"/>
        <delete dir="${docs.dir}" quiet="true"/>
    </target>
</project>
